Description: >
    This template is design to deploy DGMC POC in AWS-USE2[Ohio] enviornment.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  VpcId:
    Description: VPC ID for resources
    Default: vpc-5e303638
    Type: AWS::EC2::VPC::Id
  IamInstanceProfileName:
    Type: String
    Default: DG_EC2_Instance_RO
    AllowedValues:
    - DG_EC2_Instance_RO
  MySubnetIDs:
    Description: Subnet IDs
    Default: subnet-96791fdc
    Type: AWS::EC2::Subnet::Id
  ADDirectoryId:
    Type: String
    Description: Provide Directory IDs
    Default: d-90672b13ad
    AllowedValues:
    - d-90672b13ad
  ADDirectoryName:
    Type: String
    Description: Provide Directory Name
    Default: vrst.local
    AllowedValues:
    - vrst.local    
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable RDP access to the instance
    Default: Dg-key-pair
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair
  InstanceType:
    Description: App EC2 instance type
    Type: String
    Default: t3.large
    AllowedValues:
    - t3.large
Resources:
  myssmdocument:
    Type: AWS::SSM::Document
    Properties:
      Content:
        schemaVersion: '1.2'
        description: Join instances to an AWS Directory Service domain
        parameters:
          directoryId:
            type: String
            description: (Required) The ID of the AWS Directory Service directory.
          directoryName:
            type: "String"
            description: (Required) The name of the AWS Directory Service directory.
        runtimeConfig:
          aws:domainJoin:
            properties:
             directoryId: "{{ directoryId }}"
             directoryName: "{{ directoryName }}"

#We have to update instance name below as per new server. For eg:- POC     
  POCInstances:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      DisableApiTermination: true
      EbsOptimized: true
      ImageId: ami-09b1ec33d2237c56b
      SubnetId:
        Ref: MySubnetIDs
      SecurityGroupIds:
        - sg-3ecf9841
        - sg-12c99c6d
      IamInstanceProfile:
        Ref: IamInstanceProfileName
      SsmAssociations:
      - DocumentName:
          Ref: myssmdocument
        AssociationParameters:
        - Key: directoryId
          Value:
          - Ref: ADDirectoryId
        - Key: directoryName
          Value:
          - Ref: ADDirectoryName
          
      UserData:
        'Fn::Base64': !Sub |
            <powershell>
            Import-Module AWSPowerShell
            C:\ProgramData\Amazon\EC2-Windows\Launch\Scripts\InitializeDisks.ps1
            Get-Partition -DriveLetter D | Set-Partition -NewDriveLetter E
            Set-TimeZone -Name "Eastern Standard Time"
            $instanceId = (Invoke-RestMethod -Method Get -Uri http://169.254.169.254/latest/meta-data/instance-id)
            $myid = New-Object Amazon.EC2.Model.Filter -Property @{name = "resource-id"; Values = $instanceId}
            $results = @(Get-EC2Tag -Filters $myid)
            $mynewname = $results | ? { $_.Key -eq "Name" } | % { $_.Value }
            Rename-Computer -NewName $mynewname -Restart
            $mynewname | Out-File -FilePath C:\DGInstall
            </powershell>
      Tags:
        - Key: Environment
          Value: AWS:USE:POC
        - Key: OSLicense
          Value: Windows:PAYG
        - Key: AppLicense
          Value: sql:BYOL
        - Key: TagVersion
          Value: 1.0
